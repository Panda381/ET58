; ML-41 (MU-14) Interpolation
;
;   N   Enter   x->f(x)

; LBL A: Enter number of samples N (max. 33)
; LBL B: Enter data pairs (x,y) starting with index n (=0..N-1), continue with R/S
; LBL C: Calculate interpolated valued f(x), continue with R/S

; Program fits an (N-1)th order polynomial to n input data points using Aitken's Method.

; Registers:
;  H0 ... current index x1
;  H1 ... current index y1 or delta1
;  H2 ... number of samples N
;  H3 ... loop counter of delta
;  H4 ... loop counter of samples
;  H5 ... save last entered value x, temporary (x1-x)
;  H6 ... save last entered value y, x value to calculate f(x)
;  H7 ... current index x2
;  H8 ... current index y2 or delta2

;  R00... data (x array, y array, delta array)

; LBL A: Enter number of samples N (max. 33)
LBL A
	HIR 02		; STO H2, number of samples N
	0
	RTN

; LBL B: Enter data pairs (x,y) starting with index n (=0..N-1), continue with R/S
LBL B
	HIR 00		; STO H0, current index x1
	( CE
	+ HIR 12 )	; RCL H2, number of samples N
	HIR 01		; STO H1, current index y
	0 HIR 05	; STO H5, last entered value x
	HIR 06		; STO H6, last entered value y

LBL SQR
	; display prompt to enter xi
	8 8 X/T		; text 'x'
	5 PGM 34 SBR X2	; display prompt 'Enter'

LBL SIN
	; display last entered value and stop
	HIR 15		; RCL H5, last entered value x
	RTN		; stop and wait for R/S

	; save entered value
	HIR 05		; STO H5, save last entered value x
	HI* 00		; STO Ind H0, store value xi

	; display prompt to enter yi
	8 9 X/T		; text 'y'
	5 PGM 34 SBR X2	; display prompt 'Enter'

	; display last entered value and stop
	HIR 16		; RCL H6, last entered value y
	RTN		; stop and wait for R/S

	; save entered value
	HIR 06		; STO H6, save last entered value y
	HI* 01		; STO Ind H1, store value yi

	; move to next entry
	HIR 70		; Inc H0, increase index x
	HIR 71		; Inc H1, increase index y
	IF 90 02 SQR	; if H0 < H2 then jump SQR

	; display 'Ready'
	PGM 03 SBR NOP	; display 'Ready'
	0
	RTN

; LBL C: Calculate interpolated valued f(x)
LBL C 
	HIR 06		; STO H6, save x value to calculate f(x)

	; prepare start 
	( HIR 12	; RCL H2, number of samples N
	HIR 01		; STO H1, current index y1 od delta1
	+ HIR 12	; RCL H2, number of samples N
	HIR 04 )	; STO H4, loop counter of samples
	HIR 08		; STO H8, current index y2 or delta2

LBL 0FD
	; copy y values behind the (x,y) array
	HI* 11		; RCL Ind H1, current index y1 or delta1
	HI* 08		; STO Ind H8, current index y2 or delta2
	HIR 71		; Inc H1, current index y1 or delta1
	HIR 78		; Inc H8, current index y2 or delta2
	HIR 0E4 0FD	; DJNZ H4 0FD, decrement loop counter and jump if not 0

	; prepare loop counter of first stage (delta01..delta0N-1)
	( HIR 12	; RCL H2, number of samples N
	- 1 ) 
	HIR 04		; STO H4, loop counter of samples

	; prepare index of deltas (y1), behind the (x,y) array
	( 2 * HIR 12 )	; RCL H2, number of samples N
	HIR 01		; STO H1, current index y1 or delta1

	; prepare index of x1
	0 HIR 00	; STO H0, current index x1

	; start of new delta stage
LBL 0FC
	; prepare index of y2
	( HIR 11	; RCL H1, current index y1 or delta1
	+ 1 )
	HIR 08		; STO H8, current index y2 or delta2

	; prepare index of x2
	( HIR 10	; RCL H0, current index x1
	+ 1 )
	HIR 07		; STO H7, current idnex x2

	; prepare temporary (x1-x)
	( HI* 10	; RCL Ind H0, (x1) current x1
	- HIR 16 )	; RCL H6, x value to calculate f(x)
	HIR 05		; STO H5, temporary (x1-x)

	; prepare loop counter of delta
	HIR 14		; RCL H4, loop counter of samples
	HIR 03		; STO H3, loop counter of delta

	; start of loop to get deltas of one stage
LBL 0FB
	; calculate delta = determinant(y1, x1-x, y2, x2-x)/(x2-x1) = (y1*(x2-x) - y2*(x1-x))/(x2-x1)
	( ( HI* 11	; RCL Ind H1, current y1 or delta1
	* ( HI* 17	; RCL Ind H7, current x2
	- HIR 16 )	; RCL H6, x value to calculate f(x)
	- HI* 18	; RCL Ind H8, current y2 or delta2
	* HIR 15 )	; RCL H5, temporary (x1-x)
	/ ( HI* 17	; RCL Ind H7, current x2
	- HI* 10 ) )	; RCL Ind H0, current x1
	HI* 08		; STO Ind H8, store new delta2

	; increase index of y2 and x2
	HIR 78		; Inc H8, increase current index y2 or delta2
	HIR 77		; Inc H7, increase current index x2
	HIR 0E3 0FB	; DJNZ H3 0FB, loop counter of delta

	; shift y1, x2
	HIR 71		; Inc H1, increase current index y1 or delta1
	HIR 70		; Inc H0, increase current index x1
	HIR 0E4 0FC	; DJNZ H4 0FC, loop counter of samples

	; display result value = last delta
	HIR 88		; Dec H8, decrement current index y2 or delta2
	HI* 18		; RCL Ind H8, get last delta2
	RTN

	GTO C		; continue
